{"version":3,"sources":["img/internet.svg","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Section","title","subtitle","dark","id","className","App","props","React","useState","Navbar","bg","variant","expand","fixed","Text","src","logo","alt","onClick","scroll","scrollToTop","Toggle","aria-controls","Collapse","Nav","href","activeClass","to","spy","smooth","offset","duration","Form","inline","FormControl","type","placeholder","Button","height","width","frameborder","allowfullscreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5089828e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/internet.6c9295dc.svg\";","import React from \"react\";\n\nexport default function Section({ title, subtitle, dark, id }) {\n  return (\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\n      <div className=\"section-content\" id={id}>\n        <h1>{title}</h1>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n}\n","import { Nav, Navbar, Form, Button, FormControl, NavDropdown, Container } from \"react-bootstrap\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport \"./App.css\";\nimport logo from \"./img/internet.svg\";\nimport Section from \"./components/Section\";\nimport React, { useState, useEffect, useContext } from \"react\";\n\n\nconst App = (props) => {\n\nconst [showMessage, setShowMessage] = React.useState(false)\n const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"xl\" fixed=\"top\">\n      <a >  <Navbar.Text className=\"text-vsoft\">\n      <img src={logo}  className=\"nav-logo \" alt=\"Logo\" onClick={scrollToTop}/> VESOFT LTD\n       </Navbar.Text>  </a> \n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <>\n            <Nav className=\"mr-auto\">\n              <Link className=\"nav-item \" href=\"/home\" activeClass=\"active\" to=\"section1\" spy={true} smooth={true} offset={-70} duration={500}>\n                HOME\n              </Link>\n              <Link className=\"nav-item \" href=\"/services\" activeClass=\"active\" to=\"section2\" spy={true} smooth={true} offset={-70} duration={500}>\n                SERVICES\n              </Link>\n              <Link className=\"nav-item \" href=\"/about\" activeClass=\"active\" to=\"section3\" spy={true} smooth={true} offset={-70} duration={500}>\n                ABOUT\n              </Link>\n              <Link className=\"nav-item \" href=\"/contact\" activeClass=\"active\" to=\"section4\" spy={true} smooth={true} offset={-70} duration={500}>\n                CONTACT\n              </Link>\n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n               <Button variant=\"outline-light\">Search</Button>\n           </Form>\n          </>\n        </Navbar.Collapse>\n      </Navbar>\n      <br />\n      <br />\n\n  <div className=\"App\">\n        <header className=\"App-header\">\n          <Section id=\"section1\" />\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h3 className=\"title-color\">VESOFT</h3>\n          <Navbar.Text className=\"subtitle-color\"> Unique software solutions</Navbar.Text>\n        </header>\n      <div className=\"what-we-do\">\n        <Section id=\"section2\"  />\n        <Navbar.Text className=\"wwd\"> What We Do</Navbar.Text>\n\n        <ul>\n            <li>Software Development and Sales</li>\n            <li>Career Development and Mentoring</li>\n            <li>Online and Drop-in Coding School</li>\n            <li>Engineering Software</li>\n            <li>STEM Test Prep</li>\n            <li>Hackathons</li>\n            <li>Olympiads Prep</li>\n        </ul>\n        <div className=\"oge\"> MATERIAL BALANCE</div> \n        <div className=\"fa\"> FLOW ASSURANCE</div> \n        <div className=\"mb\"> OIL & GAS ENGNRG.</div> \n        <div className=\"javascript\"> JAVASCRIPT</div>\n        <div className=\"py\"> PYTHON</div> \n        <div className=\"java\"> JAVA</div> \n        <div className=\"wb\"> WEB DEVELOPMENT</div> \n      </div>\n      <div className=\"subtext\">\n      <Section id=\"section3\"/>\n        <Navbar.Text className=\"after-header\"> About Us</Navbar.Text>\n      <Navbar.Text>\n              VESOFT is founded on the principle of excellence and service. We think of ways that software can impact your business and mankind in general. \n              At VESOFT we are constantly pushing boundaries, believing that nothing is impossible if you just believe.\n              At the core of our business are employees development and client satisfaction. We believe that good work speaks for itself and so we strive to distinctively satisfy\n              a single customer. To keep us abreast of current needs, we adopt Research and Development in our software solutions. We keenly study the gaps in a field of endeavour \n              and boldly design a solution for it. We want to do that very thing that people initially thought was impossible or are written off, for we have studied the world and\n              conclude that that unique solution will eventually make a difference.\n              For instance we've noticed that teaching someone to code without effective mentoring, usually yields a negative result. So, at VESOFT we operate an effective mentoring\n              and drop-in program to reduce that drag in the system\n      </Navbar.Text>\n      </div>\n      <div className=\"subtext\">\n         <Section id=\"section4\" />\n         <Navbar.Text className=\"after-header\">Contact Us</Navbar.Text> <br/>\n         <Navbar.Text >\n                VESOFT LTD <br />\n                1 Chima Close, Behind Omega House. <br />\n                Rumuodara, Port Harcourt. <br />\n                Rivers State. <br />\n                ekpes.okpo@gmail.com \n         </Navbar.Text> \n         <p>\n         <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3768.62564419307!2d7.0373316698548445!3d4.862354644227264!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x1069d27a00fc368d%3A0x1e357b1ff840ebdf!2sOmega%20House%20Power%20Arena.!5e0!3m2!1sen!2sng!4v1580383641657!5m2!1sen!2sng\" \n         height=\"450\" width=\"800\" frameborder=\"0\"  allowfullscreen > \n         </iframe>\n         </p>\n      </div>\n  </div>\n  <br/>\n    </>\n\n  );\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}